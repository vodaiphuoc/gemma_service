services:
    extract_service:
        image: test_microservices/extract_service:${TAG}
        build:
            context: .
            dockerfile: ./extract_service/Dockerfile
        restart: always
        env_file:
            - config.env
        ports:
            - "8081:8081"
        depends_on:
            rabbit:
                condition: service_healthy
        secrets:
            - PATH1
            - PATH2
            - PATH3
    
    queue_service:
        image: test_microservices/queue_service:${TAG}
        build:
            context: .
            dockerfile: ./queue_service/Dockerfile
        restart: always
        env_file:
            - config.env
        ports:
            - "8080:8080"
        depends_on:
            rabbit:
                condition: service_healthy
        secrets:
            - PATH1
            - PATH2
            - PATH3

    ranking_service:
        image: test_microservices/ranking_service:${TAG}
        build:
            context: .
            dockerfile: ./ranking_service/Dockerfile
        restart: always
        env_file:
            - config.env
        ports:
            - "8082:8082"
        depends_on:
            rabbit:
                condition: service_healthy
        secrets:
            - PATH1
            - PATH2
            - PATH3

    rabbit:
        image: rabbitmq:3.11.11-management
        restart: always
        ports:
            - "15672:15672"
        healthcheck:
            test: [ "CMD", "rabbitmqctl", "status" ]
            interval: 10s
            timeout: 10s
            retries: 3
        stop_signal: SIGTERM

secrets:
    PATH1:
        file: ${OBJS}
    PATH2:
        file: ${MQS}
    PATH3:
        file: ${GENERALS}